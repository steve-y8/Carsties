version: '3.4'

services:
    postgres:
        image: postgres
        environment:
            - POSTGRES_PASSWORD=postgrespw
        ports:
            - 5432:5432
        volumes:
            - pgdata:/var/lib/postgresql/data
    mongodb:
        image: mongo
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=mongopw
        ports:
            - 27017:27017
        volumes:
            - mongodata:/var/lib/mongodb/data
    rabbitmq:
        image: rabbitmq:3-management-alpine
        ports:
            - 5672:5672
            - 15672:15672
    auctionservice:
        image: ${DOCKER_REGISTRY-}auctionservice
        build:
            context: .
            dockerfile: AuctionService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - RabbitMq__Host=rabbitmq
            - ConnectionStrings__DefaultConnection=Server=postgres:5432; User Id=postgres; Password=postgrespw; Database=auctions
            - IdentityServiceUrl=http://identityservice
        ports:
            - 7001:80
        depends_on:
            - postgres
            - rabbitmq
    searchservice:
        image: ${DOCKER_REGISTRY-}searchservice
        build:
            context: .
            dockerfile: SearchService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - RabbitMq__Host=rabbitmq
            - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
            - AuctionServiceUrl=http://auctionservice
        ports:
            - 7002:80
        depends_on:
            - mongodb
            - rabbitmq
    identityservice:
        image: ${DOCKER_REGISTRY-}identityservice
        build:
            context: .
            dockerfile: IdentityService/Dockerfile
        environment:
            # In IdentityService.HostingExtensions.ConfigureServices(), we set the token issuer URI to identityservice if running in Docker environment
            - ASPNETCORE_ENVIRONMENT=Docker
            - ASPNETCORE_URLS=http://+:80
            - ConnectionStrings__DefaultConnection=Server=postgres:5432; User Id=postgres; Password=postgrespw; Database=identity
        ports:
            - 5000:80
        depends_on:
            - postgres

    gatewayservice:
        image: ${DOCKER_REGISTRY-}gatewayservice
        build:
            context: .
            dockerfile: GatewayService/Dockerfile
        environment:
            # Will apply app settings from appsettings.json and appsettings.Docker.json
            # appsettings.json has all the common settings across all environments
            # Development environment settings are in appsettings.Development.json
            # Docker environment settings are in appsettings.Docker.json
            # If there's an appsettings.Docker.json, then the service in docker-compose doesn't need to list out all the environment settings.
            - ASPNETCORE_ENVIRONMENT=Docker
            - ASPNETCORE_URLS=http://+:80
        ports:
            - 6001:80
        depends_on:
            - auctionservice
            - searchservice

volumes:
    pgdata:
    mongodata:


